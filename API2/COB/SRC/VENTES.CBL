000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. VENTES.
000300
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700     SELECT VENTEU ASSIGN TO VENTESEU.
000800     SELECT VENTAS ASSIGN TO VENTESAS.
000900
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD VENTAS.
001210     COPY VTAS.
002200
002300 FD VENTEU.
002310     COPY VTEU.
003300
003400 WORKING-STORAGE SECTION.
003410 COPY VTSTRUCT.
004505
004520*** VARS CLASSIQUES ***
004600
004700 77 WS-VENTEU       PIC 9     VALUE 0.
004800     88 FF-VENTEU            VALUE 1.
004900 77 WS-VENTAS       PIC 9     VALUE 0.
005000     88 FF-VENTAS            VALUE 1.
005100 77 WS-ANO          PIC 9.
005200 77 WS-VAR          PIC 9     VALUE 0.
005300 01 ED-SQLCODE      PIC +Z(8)9.
005400 77 WS-MSG          PIC X(20) VALUE 'DEFAULT MSG'.
005500
005600 77 EU-CMD-CURR     PIC 9(3).
005700 77 AS-CMD-CURR     PIC 9(3).
005800 77 CUST-COMM       PIC 9(8)V9(2).
005900 77 CUST-COMM-TOTAL PIC 9(8)V9(2).
006000 77 CUST-COMM-UP    PIC S9(8)V9(2) USAGE COMP-3.
006100 77 WS-PRICE        PIC S9(3)V9(2).
006200 77 SEP             PIC X(20)      VALUE ALL SPACES.
006300
006400***  SS PROG  ***
006500 77 WS-DATEPROG     PIC X(8) VALUE 'CONVDATE'.
006600 77 WS-FORMAT       PIC X(2) VALUE 'FR'.
006610
006800*****************       DB2      ***************
007320     EXEC SQL INCLUDE SQLCA    END-EXEC.
007330     EXEC SQL INCLUDE ORD      END-EXEC.
007340     EXEC SQL INCLUDE ITE      END-EXEC.
007350     EXEC SQL INCLUDE PRO      END-EXEC.
007360     EXEC SQL INCLUDE CUS      END-EXEC.
007390
007402
007410 PROCEDURE DIVISION.
007500     OPEN INPUT VENTEU VENTAS
007600     PERFORM LECT-VENTEU
007700     PERFORM LECT-VENTAS
007800     DISPLAY 'CMD EUROPE N  ' EU-O-NO
007900     DISPLAY 'CMD ASIE   N  ' AS-O-NO
008000
008100     PERFORM UNTIL FF-VENTEU AND FF-VENTAS
008200        PERFORM EVAL-SALES-FILES
008300     END-PERFORM
008400
008500     CLOSE VENTEU VENTAS
008600
008700     GOBACK.
008710
008800*** PARAGRAPHS ***
008900 LECT-VENTEU.
009000     READ VENTEU AT END
009100        SET  FF-VENTEU TO TRUE
009200        MOVE 999      TO EU-O-NO
009300        DISPLAY 'FIN FICHIER VENTE EUROPE'
009400     END-READ.
009500
009600 LECT-VENTAS.
009700     READ VENTAS AT END
009800        SET  FF-VENTAS TO TRUE
009900        MOVE 999       TO AS-O-NO
010000        DISPLAY 'FIN FICHIER VENTE ASIE'
010100     END-READ.
010200
010300 EVAL-SALES-FILES.
010400     EVALUATE TRUE
010500          WHEN EU-O-NO < AS-O-NO
010600              MOVE ENR-VENTES-EU TO ENR-VENTE-ST
010700              PERFORM UPDATE-ORDER
010800              PERFORM TRAIT-EU
010900          WHEN EU-O-NO > AS-O-NO
011000              MOVE ENR-VENTES-AS TO ENR-VENTE-ST
011100              PERFORM UPDATE-ORDER
011200              PERFORM TRAIT-AS
011300          WHEN OTHER
011400              MOVE ENR-VENTES-EU TO ENR-VENTE-ST
011500              PERFORM UPDATE-ORDER
011600              PERFORM TRAIT-EU
011700              PERFORM TRAIT-AS
011800          END-EVALUATE.
011900
012000 FETCH-PRICE.
012100     MOVE ENR-P-NO TO PRO-P-NO
012200     EXEC SQL
012300        SELECT PRICE
012400        INTO :PRO-PRICE
012500        FROM API2.PRODUCTS
012600        WHERE P_NO = :PRO-P-NO
012700     END-EXEC
012800     MOVE 'FETCH PRICE ' TO WS-MSG
012900     PERFORM TEST-SQLCODE.
013000
013100 TRAIT-EU.
013200     DISPLAY 'EU-O-NO ' EU-O-NO
013300
013400     INITIALIZE ENR-VENTE-ST
013500     INITIALIZE CUST-COMM-TOTAL
013600
013700     MOVE EU-O-NO TO EU-CMD-CURR
013800
013900     PERFORM UNTIL EU-CMD-CURR NOT EQUAL EU-O-NO OR FF-VENTEU
014000
014100         MOVE ENR-VENTES-EU TO ENR-VENTE-ST
014200         PERFORM UPDATE-ITEMS
014300         PERFORM LECT-VENTEU
014400
014500     END-PERFORM
014600     PERFORM UPDATE-CA-CUSTOMER.
014700
014800 TRAIT-AS.
014900     DISPLAY 'AS-O-NO ' AS-O-NO
015000
015100     INITIALIZE ENR-VENTE-ST
015200     INITIALIZE CUST-COMM-TOTAL
015300
015400     MOVE AS-O-NO TO AS-CMD-CURR
015500
015600     PERFORM UNTIL AS-CMD-CURR NOT EQUAL AS-O-NO OR FF-VENTAS
015700
015800         MOVE ENR-VENTES-AS TO ENR-VENTE-ST
015900         PERFORM UPDATE-ITEMS
016000         PERFORM LECT-VENTAS
016100
016200     END-PERFORM
016300     PERFORM UPDATE-CA-CUSTOMER.
016400
016500 UPDATE-ORDER.
016600     CALL WS-DATEPROG USING ENR-O-DATE WS-FORMAT
016700
016800     MOVE ENR-O-NO     TO ORD-O-NO
016900     MOVE ENR-E-NO     TO ORD-S-NO
017000     MOVE ENR-C-NO     TO ORD-C-NO
017100     MOVE ENR-O-DATE   TO ORD-O-DATE
017200
017300     EXEC SQL
017400       INSERT INTO
017500             API2.ORDERS(O_NO, S_NO, C_NO, O_DATE)
017600       VALUES (:ORD-O-NO, :ORD-S-NO, :ORD-C-NO, :ORD-O-DATE)
017700     END-EXEC
017800     PERFORM TEST-SQLCODE.
017900
018000 UPDATE-ITEMS.
018100     MOVE ENR-PRICE TO WS-PRICE
018200     IF WS-PRICE = 0 THEN
018300        PERFORM FETCH-PRICE
018400        MOVE PRO-PRICE TO ENR-PRICE
018500     END-IF
018600
018700     MOVE ENR-O-NO       TO ITE-O-NO
018800     MOVE ENR-P-NO       TO ITE-P-NO
018900     MOVE ENR-QUANTITY   TO ITE-QUANTITY
019000     MOVE ENR-PRICE      TO ITE-PRICE
019100     EXEC SQL
019200          INSERT INTO
019300          API2.ITEMS(O_NO, P_NO, QUANTITY, PRICE)
019400          VALUES (:ITE-O-NO, :ITE-P-NO, :ITE-QUANTITY, :ITE-PRICE)
019500         END-EXEC
019600         MOVE 'UPDATING ITEMS' TO WS-MSG
019700         PERFORM TEST-SQLCODE
019800         PERFORM CUMUL-CA-CUSTOMER.
019810
019900 CUMUL-CA-CUSTOMER.
020000     COMPUTE CUST-COMM = ENR-PRICE * ENR-QUANTITY
020100     ADD CUST-COMM TO CUST-COMM-TOTAL.
020200
020300 UPDATE-CA-CUSTOMER.
020400     MOVE CUST-COMM-TOTAL TO CUST-COMM-UP
020500     MOVE ORD-C-NO  TO CUS-C-NO
020600     EXEC SQL
020700       UPDATE API2.CUSTOMERS
020800       SET BALANCE = BALANCE + :CUST-COMM-UP
020900       WHERE C_NO = :CUS-C-NO
021000     END-EXEC
021100     PERFORM TEST-SQLCODE.
021200
021300 TEST-SQLCODE.
021400     EVALUATE TRUE
021500          WHEN SQLCODE = ZERO
021600             CONTINUE
021700          WHEN SQLCODE = -803
021800             DISPLAY
021900               'ERREUR INSERT : DOUBLON SUR CODE '
022000          WHEN SQLCODE > ZERO
022100             IF SQLCODE = +100
022200               DISPLAY  'CODE XX INTROUVABLE POUR OPERATION '
022300             END-IF
022400             MOVE SQLCODE TO ED-SQLCODE
022500             DISPLAY 'WARNING : ' ED-SQLCODE
022600          WHEN OTHER
022700             DISPLAY 'MSG -> ' WS-MSG
022800             MOVE SQLCODE TO ED-SQLCODE
022900             DISPLAY 'ANOMALIE ' ED-SQLCODE
023000             PERFORM ABEND-PROG
023100     END-EVALUATE.
023200
023300  ABEND-PROG.
023400     EXEC SQL ROLLBACK END-EXEC
023500     DISPLAY 'ROLLING BACK TO PREV TABLE STATE'
023600     COMPUTE WS-ANO = 1 / WS-ANO.
